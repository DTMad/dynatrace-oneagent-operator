apiVersion: dynatrace.com/v1alpha1
kind: OneAgent
metadata:
  # a descriptive name for this object.
  # all created child objects will be based on it.
  name: oneagent
  labels:
    app: {{ template "dynatrace-oneagent.name" . }}
    chart: {{ template "dynatrace-oneagent.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  # dynatrace api url including `/api` path at the end
  apiUrl: {{ .Values.operator.apiUrl }}
  # disable certificate validation checks for installer download and API communication
  skipCertCheck: {{ .Values.operator.skipCertCheck }}
  # name of secret holding `apiToken` and `paasToken`
  # if unset, name of custom resource is used
  tokens: {{ template "dynatrace-oneagent.fullname" . }}-tokens
  # node selector to control the selection of nodes (optional)
  {{- if .Values.operator.nodeSelector }}
  nodeSelector:
{{ toYaml .Values.operator.nodeSelector | indent 4 }}
  {{- end }}
  # https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/ (optional)
  {{- if .Values.operator.tolerations }}
  tolerations:
{{ toYaml .Values.operator.tolerations | indent 4 }}
  {{- end }}
  # oneagent installer image (optional)
  # certified image from Red Hat Container Catalog for use on OpenShift: registry.connect.redhat.com/dynatrace/oneagent
  # defaults to docker.io/dynatrace/oneagent
  image: {{ .Values.operator.image }}
  # arguments to oneagent installer (optional)
  # https://www.dynatrace.com/support/help/shortlink/oneagent-docker#limitations
  args:
    {{- if .Values.operator.args.server }}
    - SERVER={{ .Values.operator.args.server }}
    {{- end }}
    {{- if .Values.operator.args.tenant }}
    - TENANT={{ .Values.operator.args.tenant }}
    {{- end }}
    {{- if .Values.operator.args.tenantToken }}
    - TENANT_TOKEN={{ .Values.operator.args.tenantToken }}
    {{- end }}
    {{- if .Values.operator.args.proxy }}
    - PROXY={{ .Values.operator.args.proxy }}
    {{- end }}
    {{- if .Values.operator.args.hostGroup }}
    - HOST_GROUP={{ .Values.operator.args.hostGroup }}
    {{- end }}
    {{- if .Values.operator.args.installPath }}
    - INSTALL_PATH={{ .Values.operator.args.installPath }}
    {{- end }}
    {{- if .Values.operator.args.infraOnly }}
    - INFRA_ONLY={{ .Values.operator.args.infraOnly }}
    {{- end }}
    {{- if .Values.operator.args.noSELinuxPolicy }}
    - -n
    {{- end }}
    {{- if .Values.operator.args.preserveSELinux }}
    - -p
    {{- end }}
    {{- if .Values.operator.args.user }}
    - USER={{ .Values.operator.args.user }}
    {{- end }}
    {{- if .Values.operator.args.group }}
    - GROUP={{ .Values.operator.args.group }}
    {{- end }}
    {{- if .Values.operator.args.appLogContentAccess }}
    - APP_LOG_CONTENT_ACCESS={{ .Values.operator.args.appLogContentAccess }}
    {{- end }}
    {{- if .Values.operator.args.nonRootMode }}
    - NON_ROOT_MODE={{ .Values.operator.args.nonRootMode }}
    {{- end }}
    {{- if .Values.operator.args.disableRootFallback }}
    - DISABLE_ROOT_FALLBACK={{ .Values.operator.args.disableRootFallback }}
    {{- end }}
    {{- end }}
  # environment variables for oneagent (optional)
  env:
  {{- range $name, $value := .Values.operator.env }}
    - name: {{ $name }}
      value: {{ quote $value }}
  {{- end }}
  # resource settings for oneagent pods (optional)
  # consumption of oneagent heavily depends on the workload to monitor
  # please adjust values accordingly
  #resources:
  #  requests:
  #    cpu: 100m
  #    memory: 512Mi
  #  limits:
  #    cpu: 300m
  #    memory: 1.5Gi
